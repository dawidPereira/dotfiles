## --- Setup fzf theme ---
fg="#CBE0F0"
bg="#011628"
bg_highlight="#143652"
purple="#B388FF"
blue="#06BCE4"
cyan="#2CF9ED"

export FZF_DEFAULT_OPTS="--color=fg:${fg},bg:${bg},hl:${purple},fg+:${fg},bg+:${bg_highlight},hl+:${purple},info:${blue},prompt:${cyan},pointer:${cyan},marker:${cyan},spinner:${cyan},header:${cyan}"

# -- Use fd instead of fzf --

export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

source ~/fzf-git.sh/fzf-git.sh

show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"

export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo \${}'"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "$show_file_or_dir_preview" "$@" ;;
  esac
}
# HTTP requests with xh!
alias http="xh"

# FZF
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


# Configure FZF.
alias fp="fzf --preview 'bat --style=numbers --color=always {}'"

eval "$(fzf --zsh)"

cx() { cd "$@" && l; }
fcd() { cd "$(find . -type d -not -path '*/.*' | fzf)" && l; }
fdv() { cd "$(find . -type d -not -path '*/.*' | fzf)"  && l; nvim . }
f() { echo "$(find . -type f -not -path '*/.*' | fzf)" | pbcopy }
fv() { nvim "$(find . -type f -not -path '*/.*' | fzf --preview 'bat --style=numbers --color=always {}')" }

# Open notes in vim
on() {
  cd ~/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/Notes || return
  local file
  file=$(find . -type f -not -path '*/.*' | fzf --preview 'bat --style=numbers --color=always {}')
  [ -n "$file" ] && nvim "$file"
}
# Find notes and return the path
fn() {
    cd ~/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/Notes || return
    local file
    file=$(find . -type f -not -path '*/.*' | fzf --preview 'bat --style=numbers --color=always {}')
    [ -n "$file" ] && echo "$file"
}

# Open repositories in vim
or() {
  cd ~/Repositories/ || return
  local file
  file=$(find . -type f -not -path '*/.*' | fzf --preview 'bat --style=numbers --color=always {}')
  [ -n "$file" ] && nvim "$file"
}
# Find repositories and return the path
fr() {
    cd ~/Repositories/ || return
    local file
    file=$(find . -type f -not -path '*/.*' | fzf --preview 'bat --style=numbers --color=always {}')
    [ -n "$file" ] && echo "$file"
}
# Tmux
alias tmux="tmux -f ~/.tmux.conf"
alias t='tmux'
alias e='exit'

#Nvim
alias vim='nvim'
alias v="/opt/homebrew/bin/nvim"

# VI Mode!!!
bindkey jj vi-cmd-mode
